--人员类型
--REPORTER  报案人
--CHECHKER  查勘员
--DES 定损员
--APPLI 投保人
--BENE 受益人
--INSURED 被保人
--BUS 业务员 
--THIRD_PARTY_ACCIDENTDRIVER 三者车驾驶员
--ACCIDENTDRIVER 标的车驾驶员
--THEINJURED    三者伤者
-- INJURED_INSURED 被保人伤者
--人实体 查勘员
--WITH TMP_CHCKER AS ( 

--set hive.execution.engine=spark;
--set hive.exec.parallel=true;
--set spark.network.timeout=1400s;

DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_REPORT;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_REPORT AS 
SELECT 
T2.POLICYNO ,
T2.REGISTNO,
-- NVL(T.CHECKER1,T.CHECKER2) USER_CODE  ,--"报案人代码"
T1.REPORTORNAME USERNAME,--"报案人名称"
T1.REPORTORIDENTIFYTYPE IDENTIFYTYPE,--报案人名称身份证类型
T1.REPORTORIDENTIFYNO IDENTIFYNUMBER,--"报案人身份证号",
T1.REPORTORPHONENUMBER TEL,--"报案人电话" ,   
'REPORTER' KIND --报案人种类
,T1.ETL_DATE 
,"太平财险" COMPANY
 ,T2.COMPANYCODE --机构代码
FROM dwd_graphbase.filter_gcregistmain T1
LEFT JOIN  dwd_graphbase.filter_gcclaimmain T2
ON T1.REGISTNO=T2.REGISTNO
;




DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_CHCKER;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_CHCKER AS 
SELECT 
T.POLICYNO ,
T3.REGISTNO,
-- NVL(T.CHECKER1,T.CHECKER2) USER_CODE  ,--"查勘员代码"
U.USERCNAME USERNAME,--"查勘员名称"
'1' IDENTIFYTYPE,--身份证类型
U.IDENTIFYNO IDENTIFYNUMBER,--"查勘员身份证号",
U.MOBILE TEL,--"查勘员电话" ,   
'CHECHKER' KIND --查勘员种类
,T.ETL_DATE 
,"太平财险" COMPANY
 ,T3.COMPANYCODE	--机构代码
FROM dwd_graphbase.filter_gcsurveymain T
LEFT JOIN  dwd_graphbase.filter_gcclaimmain T3
ON T.REGISTNO=T3.REGISTNO
LEFT OUTER JOIN dwd_graphbase.filter_gguser U ON NVL(T.CHECKER1,T.CHECKER2) = U.USERCODE
LEFT OUTER JOIN dwd_graphbase.filter_gcregistmain T1 ON T1.REGISTNO = T.REGISTNO
and (
NVL(T.CHECKER1,T.CHECKER2) is not null
or U.USERCNAME is not null
or U.MOBILE is not null
or U.IDENTIFYNO is not null
);


--定损员
DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_DES;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_DES AS 
SELECT 
GT.REGISTNO,
T1.POLICYNO,
RPT.EST_ACCOUNT_NAME USERNAME,--定损员,
'1' AS IDENTIFYTYPE,--身份证类型 
G.IDENTIFYNO IDENTIFYNUMBER,--"定损员身份证号",
G.MOBILE TEL, --"定损员电话",
--G.COMPANYCODE "归属机构"
'DES' KIND
,GRI.ETL_DATE 
,"太平财险" COMPANY
 ,T1.COMPANYCODE --机构代码
FROM dwd_graphbase.filter_gcregistinfo GRI
INNER JOIN  dwd_graphbase.filter_gctask  GT ON  GRI.REGISTNO = GT.REGISTNO AND GT.VALIDIND = '1'
INNER JOIN  dwd_graphbase.filter_lp_rf_claim_clm_fin_ccc RPT ON RPT.CLAIM_ID = GT.RELATTASKID
INNER JOIN dwd_graphbase.filter_gguser   G ON G.USERCODE=RPT.APPRAISER_ACCOUNT
LEFT OUTER JOIN dwd_graphbase.filter_gcclaimmain T1 ON GRI.REGISTNO=T1.REGISTNO 
WHERE 1=1 
;



--人实体 投保人
DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_APPLI;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_APPLI AS 
SELECT 
T.POLICYNO,
T3.REGISTNO ,
T2.INSUREDNAME USERNAME,--"投保人姓名",
T2.IDENTIFYTYPE IDENTIFYTYPE,--"投保人证件类型",
T2.IDENTIFYNUMBER IDENTIFYNUMBER,--"投保人证件号",
T2.MOBILEPHONE TEL,--"投保人电话",
'APPLI' KIND  --人员类型
,T.ETL_DATE 
,"太平财险" COMPANY
 ,T.COMPANYCODE --机构代码
FROM dwd_graphbase.filter_gupolicymain T  
INNER JOIN dwd_graphbase.filter_gupolicyrisk T1 ON T.POLICYNO = T1.POLICYNO
LEFT OUTER JOIN dwd_graphbase.filter_gupolicyrelatedparty T2 ON T.POLICYNO = T2.POLICYNO AND T2.INSUREDFLAG='1'
LEFT OUTER JOIN dwd_graphbase.filter_gcclaimmain  T3 ON T.POLICYNO = T3.POLICYNO
INNER JOIN dwd_graphbase.filter_gsclientpersona T4 ON T.INSUREDCODE=T4.CLIENTCODE

;


--人实体 被保人，受益人


DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_INSURED_BENE;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_INSURED_BENE AS 
SELECT 
T.POLICYNO, --保单号码 
T2.REGISTNO,
T.RISKCODE, --险种代码 
T.INSUREDNAME USERNAME , --姓名 
T.IDENTIFYTYPE, --人员类型
T.IDENTIFYNUMBER,--人员身份证号码
T.INSUREDMOBILEPHONE TEL, --人员电话
CASE WHEN T.INSUREDFLAG = '4' THEN 'BENE' ELSE 'INSURED' END AS KIND
,T.ETL_DATE 
,"太平财险" COMPANY
 ,T1.COMPANYCODE --机构代码
FROM dwd_graphbase.filter_gupolicyriskRELATEDPARTY T
LEFT JOIN 
dwd_graphbase.filter_gupolicymain T1
ON T.POLICYNO=T1.POLICYNO
LEFT JOIN 
dwd_graphbase.filter_gcclaimmain  T2 
ON T.POLICYNO = T2.POLICYNO
--AND T.RISKCODE=T1.RISKCODE 
INNER JOIN dwd_graphbase.filter_gsclientpersona T4 ON T.INSUREDCODE=T4.CLIENTCODE
;



--人实体， 业务员

DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_BUS;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_BUS AS 
SELECT 
 T.POLICYNO,
T3.REGISTNO,
 --T.SALESMANCODE "业务员代码",
 T5.USERCNAME USERNAME,--"业务员名称",
 '1' IDENTIFYTYPE ,--身份证类型
 T5.IDENTIFYNO IDENTIFYNUMBER,--"业务员身份证号码" ,
 T5.MOBILE  TEL,--"业务员电话",
 "BUS" KIND
 ,T.ETL_DATE 
 ,"太平财险" COMPANY
 ,T.COMPANYCODE --机构代码
  FROM dwd_graphbase.filter_gupolicymain T 
INNER JOIN dwd_graphbase.filter_gupolicyrisk T1 ON T.POLICYNO = T1.POLICYNO
LEFT OUTER JOIN dwd_graphbase.filter_gcclaimmain  T3 ON T.POLICYNO = T3.POLICYNO
LEFT OUTER JOIN dwd_graphbase.filter_gguser T5 ON T.SALESMANCODE = T5.USERCODE AND T5.USERIND='3'
;

--标的车驾驶员 和三者车驾驶员
DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_DRIVER;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_DRIVER AS 
SELECT  
T.REGISTNO ,-- "报案号"
T3.POLICYNO,
NVL(T1.DRIVERNAME,T2.DRIVERNAME) USERNAME,--"三者车驾驶员",
NVL(T1.DRIVERCERTITYPE,T2.DRIVERCERTITYPE)  IDENTIFYTYPE,--"三者车驾驶员证件类型",
NVL(T1.DRIVERCERTINO,T2.DRIVERCERTINO)  IDENTIFYNUMBER ,--"三者车驾驶员证件号码",
'' as TEL,
'THIRD_PARTY_ACCIDENTDRIVER' KIND
,T.ETL_DATE 
,"太平财险" COMPANY
 ,T3.COMPANYCODE --机构代码
 FROM dwd_graphbase.filter_gcregistitem T
LEFT OUTER JOIN dwd_graphbase.filter_gcregistitemEXT T1 ON T.REGISTNO = T1.REGISTNO AND T.LOSSID = T1.LOSSID
 FULL OUTER JOIN (SELECT * FROM dwd_graphbase.filter_gcregistinfo 
 WHERE REGISTNO IN (SELECT DISTINCT REGISTNO FROM dwd_graphbase.filter_gcregistitem WHERE LOSSTYPE='2')) T2 ON T.REGISTNO = T2.REGISTNO 
  LEFT JOIN dwd_graphbase.filter_gcclaimmain T3
ON T.REGISTNO=T3.REGISTNO 
 WHERE 1=1
AND T.LOSSTYPE = '2'
UNION 
  SELECT  
 T.REGISTNO, -- "标的车报案号",
 T3.POLICYNO,
 T2.DRIVERNAME USERNAME,--"标的车驾驶员",
 T2.DRIVERCERTITYPE  IDENTIFYTYPE,--"标的车驾驶员证件类型",
 T2.DRIVERCERTINO  IDENTIFYNUMBER,-- "标的车驾驶员证件号码",
 '' AS TEL,
 'ACCIDENTDRIVER' KIND
 ,T.ETL_DATE 
 ,"太平财险" COMPANY
 ,T3.COMPANYCODE --机构代码
 FROM dwd_graphbase.filter_gcregistitem T
 LEFT OUTER  JOIN dwd_graphbase.filter_gcregistinfo T2 ON T.REGISTNO = T2.REGISTNO
 LEFT OUTER JOIN dwd_graphbase.filter_gcclaimmain T3 ON T.REGISTNO=T3.REGISTNO
 WHERE 1=1
   AND T.LOSSTYPE = '1'
;


-- 三者伤者 
DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_THEINJURED;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_THEINJURED AS 
SELECT 
A.REGISTNO,
T1.POLICYNO,
--A.LOSSTYPE,
B.PERSONNAME USERNAME,--三者伤者姓名
B.CERTIFICATETYPE IDENTIFYTYPE,--三者伤者身份证类型
B.CERTIFICATECODE IDENTIFYNUMBER,--三者伤者身份证号码
B.PERSONTEL TEL,--三者伤者电话
'THEINJURED' KIND --三者伤者
,A.ETL_DATE 
,"太平财险" COMPANY
 ,T1.COMPANYCODE --机构代码
FROM dwd_graphbase.filter_gcregistitem A
INNER JOIN dwd_graphbase.filter_gcregistitemPERSON B ON A.REGISTNO = B.REGISTNO AND A.LOSSID = B.LOSSID
LEFT OUTER JOIN dwd_graphbase.filter_gcclaimmain T1 ON A.REGISTNO=T1.REGISTNO
WHERE 1=1
 AND A.LOSSTYPE='5' 
;


--被保人伤者


DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_INJURED_INSURED;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_INJURED_INSURED AS 
SELECT 
T3.POLICYNO
,T.REPORT_CODE  as REGISTNO --"报案号"
,T.Injure_Name USERNAME --"伤者名字"
,t2.injure_certificate_type_code IDENTIFYTYPE --"伤者证件类型"
,t2.injure_certificate_code IDENTIFYNUMBER --"伤者证件号码"
,t2.injure_phone TEL --"伤者电话"
,'INJURED_INSURED' KIND --被保人伤者
,T.ETL_DATE 
,"太平财险" COMPANY
 ,T4.COMPANYCODE --机构代码
FROM  dwd_graphbase.filter_mc_flow T 
LEFT JOIN  dwd_graphbase.filter_gcclaimmain T4
ON T.REPORT_CODE=T4.REGISTNO
LEFT OUTER join dwd_graphbase.filter_mc_hospital t1 on t.ID = t1.FLOW_ID and t1.del_flag='0'
LEFT OUTER JOIN  dwd_graphbase.filter_mc_survey T2 ON T.ID = T2.FLOW_ID
INNER JOIN  dwd_graphbase.filter_gupolicyriskRELATEDPARTY T3 
ON T3.INSUREDNAME=T.INJURE_NAME AND T3.IDENTIFYTYPE=T2.INJURE_CERTIFICATE_TYPE_CODE AND T3.IDENTIFYNUMBER=T2.INJURE_CERTIFICATE_CODE
 WHERE T3.INSUREDFLAG <> '4'
  AND T1.IN_HOSPITAL_DATE is not null
;

--个人或者企业的车辆车主


DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_OWNER_VEHICLE;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_OWNER_VEHICLE AS 
SELECT 
 T.POLICYNO --保单号码
,T4.REGISTNO
,T1.CAROWNER USERNAME  --车辆行驶证车主
,T1.IDENTIFYTYPE --证件类型代码
,T1.IDENTIFYNUMBER --证件号码
,T1.PHONENUMBER  TEL--联系电话
,'PERSON_OF_VEHICLE_OWN'AS KIND
,T.ETL_DATE 
--,T2.CAROWNER -- 车辆行驶证车主
--,T2.FRAMENO --车架号码
--,T2.LICENSENO --车牌号
--,T2.PRINTBRANDNAME --打印车型厂牌型号名称，
,"太平财险" COMPANY
 ,T4.COMPANYCODE --机构代码
FROM dwd_graphbase.FILTER_GUPOLICYRISK T
INNER JOIN dwd_graphbase.FILTER_GUPOLICYVEHICLEOWNER T1 --太财保单车主信息
 ON T.SUBPOLICYNO = T1.SUBPOLICYNO --分保单号
INNER JOIN dwd_graphbase.FILTER_GUPOLICYITEMMOTOR T2  --太财车险保单标的信息
ON T.POLICYNO=T2.POLICYNO --保单号码
LEFT JOIN 
dwd_graphbase.FILTER_GUPOLICYRELATEDPARTY T3
ON 
 T2.POLICYNO = T3.POLICYNO AND T3.INSUREDFLAG='1'
 LEFT JOIN 
  dwd_graphbase.filter_gcclaimmain T4
  ON T2.POLICYNO = T4.POLICYNO
 WHERE T3.INSUREDTYPE ='1'
;


--个人的银行账号中的人 ：先跑银行账号实体， 人实体可以直接从伊娜很难过账号实体取值

DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_ACCOUNT_P;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_ACCOUNT_P AS 
SELECT
 T1.POLICYNO
,T1.payeename USERNAME
,T1.identifytypeall IDENTIFYTYPE
,T1.IDENTIFYNUMBER
,T2.MOBILEPHONE TEL
,'ACCOUNT_OF_PERSON_OWN' AS KIND 
,T2.ETL_DATE
,T1.COMPANY
,T1.COMPANYCODE
,T3.REGISTNO
FROM 
DWD_GRAPHBASE.ACCOUNT_PAY_TMP1 T1
INNER JOIN 
DWD_GRAPHBASE.FILTER_GUPOLICYRELATEDPARTY T2 ON T1.POLICYNO = T2.POLICYNO 
LEFT JOIN 
DWD_GRAPHBASE.FILTER_GCCLAIMMAIN T3
ON T1.POLICYNO=T3.POLICYNO
WHERE 1=1
 AND T2.INSUREDCODE NOT IN (
  SELECT DISTINCT T.CLIENTCODE FROM dwd_graphbase.filter_gsclientcorporate T
  )

;






--将所有人union 在一起 ，形成人实体：
--查勘员，定损员
DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_TMP_CHCHER_DES;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_TMP_CHCHER_DES AS 
SELECT 
POLICYNO,
 REGISTNO,
 USERNAME,
 IDENTIFYTYPE,
 IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE, 
 COMPANY,
 COMPANYCODE
FROM 
 dwd_graphbase.PERSON_ENTITY_CHCKER --查勘员
UNION  
SELECT 
POLICYNO,
 REGISTNO,
 USERNAME,
 IDENTIFYTYPE,
 IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE ,
  COMPANY,
 COMPANYCODE
FROM 
 dwd_graphbase.PERSON_ENTITY_DES --定损员
;

--投保人，被保人，受益人，业务员
DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_TMP_INSURED_BENE_APPLI_BUS;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_TMP_INSURED_BENE_APPLI_BUS AS 
--TMP_INSURED_BENE_APPLI_BUS AS (
SELECT 
POLICYNO,
 REGISTNO,
 USERNAME,
 IDENTIFYTYPE,
 IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE ,
  COMPANY,
 COMPANYCODE
FROM 
 dwd_graphbase.PERSON_ENTITY_INSURED_BENE --被保人,收益人
UNION 
SELECT 
POLICYNO,
 REGISTNO,
 USERNAME,
 IDENTIFYTYPE,
 IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE,
  COMPANY,
 COMPANYCODE
FROM 
 dwd_graphbase.PERSON_ENTITY_APPLI --投保人
UNION 
SELECT 
POLICYNO,
REGISTNO,
 USERNAME,
 IDENTIFYTYPE,
 IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE,
  COMPANY,
 COMPANYCODE
FROM 
 dwd_graphbase.PERSON_ENTITY_BUS --业务员
;

--标的车驾驶员和三者伤者
DROP TABLE  IF EXISTS dwd_graphbase.PERSON_ENTITY_TMP_DRIVER_TITHEINJURED;
CREATE  TABLE dwd_graphbase.PERSON_ENTITY_TMP_DRIVER_TITHEINJURED AS 
SELECT 
POLICYNO,
REGISTNO,
 USERNAME,
 IDENTIFYTYPE,
 IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE,
  COMPANY,
 COMPANYCODE
FROM 
 dwd_graphbase.PERSON_ENTITY_DRIVER --标的车驾驶员和三者车驾驶员
UNION 
SELECT 
POLICYNO,
 REGISTNO,
 USERNAME,
 IDENTIFYTYPE,
 IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE,
  COMPANY,
 COMPANYCODE
FROM 
 dwd_graphbase.PERSON_ENTITY_THEINJURED --三者伤者
 UNION 
 SELECT
 POLICYNO
 ,REGISTNO
  ,USERNAME
  ,IDENTIFYTYPE
  ,IDENTIFYNUMBER
  ,TEL
  ,KIND
  ,ETL_DATE
   ,COMPANY
 ,COMPANYCODE
 FROM 
dwd_graphbase.PERSON_ENTITY_INJURED_INSURED
;

--INSERT OVERWRITE TABLE dwd_graphbase.PERSON_ENTITY  
DROP TABLE  IF EXISTS DWD_GRAPHBASE.PERSON_ENTITY_UNION;
CREATE  TABLE DWD_GRAPHBASE.PERSON_ENTITY_UNION AS 
SELECT 
 CONCAT('P','00000000',nvl(USERNAME,''),nvl(IDENTIFYTYPE,'1'),nvl(IDENTIFYNUMBER,'')) PERSONID,
 POLICYNO,
 REGISTNO,
 nvl(USERNAME,'') AS USERNAME,
 nvl(IDENTIFYTYPE,'1') AS IDENTIFYTYPE,
 nvl(IDENTIFYNUMBER,'') AS IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE ,
  COMPANY,
 COMPANYCODE
FROM 
 dwd_graphbase.PERSON_ENTITY_TMP_CHCHER_DES
 WHERE IDENTIFYNUMBER IS NOT NULL 
UNION  
SELECT 
 CONCAT('P','00000000',nvl(USERNAME,''),nvl(IDENTIFYTYPE,'1'),nvl(IDENTIFYNUMBER,'')) PERSONID,
 POLICYNO,
 REGISTNO,
 nvl(USERNAME,'') AS USERNAME,
 nvl(IDENTIFYTYPE,'1') AS IDENTIFYTYPE,
 nvl(IDENTIFYNUMBER,'') AS IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE ,
  COMPANY,
 COMPANYCODE
FROM 
dwd_graphbase.PERSON_ENTITY_TMP_INSURED_BENE_APPLI_BUS
 WHERE IDENTIFYNUMBER IS NOT NULL 
UNION 
SELECT 
 CONCAT('P','00000000',nvl(USERNAME,''),nvl(IDENTIFYTYPE,'1'),nvl(IDENTIFYNUMBER,'')) PERSONID,
 POLICYNO,
 REGISTNO,
 nvl(USERNAME,'') AS USERNAME,
 nvl(IDENTIFYTYPE,'1') AS IDENTIFYTYPE,
 nvl(IDENTIFYNUMBER,'') AS  IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE,
  COMPANY,
 COMPANYCODE
FROM 
dwd_graphbase.PERSON_ENTITY_TMP_DRIVER_TITHEINJURED
 WHERE IDENTIFYNUMBER IS NOT NULL 
UNION 
SELECT
 CONCAT('P','00000000',nvl(USERNAME,''),nvl(IDENTIFYTYPE,'1'),nvl(IDENTIFYNUMBER,'')) PERSONID,
 POLICYNO,
 REGISTNO,
 nvl(USERNAME,'') AS USERNAME,
 nvl(IDENTIFYTYPE,'1') AS IDENTIFYTYPE,
 nvl(IDENTIFYNUMBER,'') AS IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE,
  COMPANY,
 COMPANYCODE
FROM 
dwd_graphbase.PERSON_ENTITY_OWNER_VEHICLE
 WHERE IDENTIFYNUMBER IS NOT NULL 
UNION  
SELECT
 CONCAT('P','00000000',nvl(USERNAME,''),nvl(IDENTIFYTYPE,'1'),nvl(IDENTIFYNUMBER,'')) PERSONID,
 POLICYNO,
 REGISTNO,
 nvl(USERNAME,'') AS USERNAME,
 nvl(IDENTIFYTYPE,'1') AS IDENTIFYTYPE,
 nvl(IDENTIFYNUMBER,'') AS IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE,
  COMPANY,
 COMPANYCODE
FROM 
dwd_graphbase.PERSON_ENTITY_REPORT
 WHERE IDENTIFYNUMBER IS NOT NULL 
UNION  
SELECT
 CONCAT('P','00000000',nvl(USERNAME,''),nvl(IDENTIFYTYPE,'1'),nvl(IDENTIFYNUMBER,'')) PERSONID,
 POLICYNO,
 REGISTNO,
 nvl(USERNAME,'') AS USERNAME,
 nvl(IDENTIFYTYPE,'1') AS IDENTIFYTYPE,
 nvl(IDENTIFYNUMBER,'') IDENTIFYNUMBER,
 TEL,
 KIND,
 ETL_DATE,
  COMPANY,
 COMPANYCODE
FROM 
dwd_graphbase.PERSON_ENTITY_ACCOUNT_P
 WHERE IDENTIFYNUMBER IS NOT NULL 

;


--DROP TABLE  IF EXISTS DWD_GRAPHBASE.PERSON_ORG;
--CREATE  TABLE DWD_GRAPHBASE.PERSON_ORG AS 
--SELECT
--T.PERSONID,
--concat('@',concat_ws('@',collect_set(companycode))) AS COMPANY_CODE_ORG
--FROM 
--dwd_graphbase.PERSON_ENTITY_UNION T
--GROUP BY 
--T.PERSONID
--;



--DROP TABLE  IF EXISTS DWD_GRAPHBASE.PERSON_ENTITY;
--INSERT OVERWRITE TABLE dwd_graphbase.PERSON_ENTITY 
DROP TABLE  IF EXISTS DWD_GRAPHBASE.PERSON_ENTITY;
CREATE  TABLE DWD_GRAPHBASE.PERSON_ENTITY AS 
SELECT DISTINCT
  T.PERSONID
 ,T.POLICYNO
 ,T.REGISTNO
 ,T.USERNAME
 ,T.IDENTIFYTYPE
 ,T.IDENTIFYNUMBER
 ,T.TEL
 ,T.KIND
 ,T.ETL_DATE
 ,T.COMPANY
 ,T.COMPANYCODE
 --,T1.COMPANY_CODE_ORG
 ,'' as PERSON_LAST_MARKER
 ,'' AS PERSON_MARKED_STATUS
 ,'' AS PERSON_MARKED_TAG
 ,'1900-01-01  00:00:00' AS PERSON_LAST_MARKED_TIME
FROM 
dwd_graphbase.PERSON_ENTITY_UNION T
WHERE IDENTIFYNUMBER <> '00000000'
AND LENGTH(USERNAME)>=2
;



