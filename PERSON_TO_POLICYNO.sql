--人到保单 投保人/被保人/受益人/业务员   
--人员类型
--CHECHKER  查勘员
--DES 定损员
--APPLI	投保人
--BENE 受益人
--INSURED 被保人
--BUS	业务员 
--THIRD_PARTY_ACCIDENTDRIVER 三者车驾驶员
--ACCIDENTDRIVER	标的车驾驶员
--THEINJURED    三者伤者
-- INJURED_INSURED	被保人伤者


--dwd_graphbase.PERSON_ENTITY;
--先获取 投保人/被保人/受益人/业务员
--dwd_graphbase.POLICYNO_ENTITY
--人到保单

--set hive.execution.engine=spark;
--set hive.exec.parallel=true;
--set spark.network.timeout=1400s;

-- DROP TABLE  IF EXISTS DWD_GRAPHBASE.PERSON_TO_POLICYNO;
--INSERT OVERWRITE TABLE DWD_GRAPHBASE.PERSON_TO_POLICYNO
DROP TABLE  IF EXISTS DWD_GRAPHBASE.PERSON_TO_POLICYNO_${DATE_CONF};
CREATE  TABLE DWD_GRAPHBASE.PERSON_TO_POLICYNO_${DATE_CONF} AS 
SELECT DISTINCT
T1.PERSONID    --人实体
,'' AS POLICYNO    --保单号
,T1.USERNAME    --人员姓名
,T1.IDENTIFYTYPE    --身份证类型
,T1.IDENTIFYNUMBER    --身份证号码
,T1.TEL    --人员电话
,'' AS KIND    --人员类型
,T1.ETL_DATE    --增量时间
,T1.COMPANYCODE COMPANYCODE_PERSON
,T1.COMPANY COMPANY_PERSON
,T1.COMPANY_CODE_ORG COMPANY_CODE_ORG_PERSON
,T1.PERSON_LAST_MARKER
,T1.PERSON_MARKED_STATUS
,T1.PERSON_MARKED_TAG
,T1.PERSON_LAST_MARKED_TIME
,T2.POLICYNOID    --保单实体
,T2.POLICYNO as POLICYNO_1   --保单号
,T2.RISKCODE    --险种代码
,T2.STARTDATE    --起保时间
,T2.ENDDATE    --终保时间
,T2.ACCEPTDATE    --承保日期
,T2.PRODUCTCODE    --产品代码
,T2.RISKCNAME    --险种名称
,'' AS  KIND_1   --险种类型
,T2.INSUREDTYPE    --人员类型
,T2.ETL_DATE as ETL_DATE_1    --增量时间
,T2.COMPANYCODE COMPANYCODE_POLICYNO
,T2.COMPANY COMPANY_POLICYNO
,T2.APPLINAME
,T2.INSUREDNAME
,T2.SUMGROSSPREMIUM
,T2.COMPANY_CODE_ORG COMPANY_CODE_ORG_POLICY
,T2.POLICY_LAST_MARKER
,T2.POLICY_MARKED_STATUS
,T2.POLICY_MARKED_TAG
,T2.POLICY_LAST_MARKED_TIME
,CASE WHEN T1.KIND='APPLI' THEN 'APPLI_OF_POLICYNO'
     WHEN T1.KIND='INSURED' THEN 'INSURE_OF_POLICYNO'
     WHEN T1.KIND='BENE' THEN 'BENE_OF_POLICYNO'
     WHEN T1.KIND='BUS' THEN 'BUS_OF_POLICYNO' 
	 ELSE NULL END RELATIONSHIP
--,T1.KIND AS RELATIONSHIP
,T1.PERSONID AS SRCID
,T2.POLICYNOID AS DESID
FROM 
dwd_graphbase.PERSON_ENTITY_RESULT T1 
INNER JOIN 
dwd_graphbase.POLICYNO_ENTITY_RESULT T2 
ON T1.POLICYNO=T2.POLICYNO
WHERE T1.KIND IN ('APPLI','INSURED','BENE','BUS')
--AND T1.PERSONID IS NOT NULL
--AND T2.POLICYNOID IS NOT NULL
;









